hydra:
  run:
    dir: .
  sweep:
    dir: .
    subdir: .
  job_logging:
    root:
      level: INFO

# Global variables 
seed: 0
save_dir: "./exp/${wandb.group}/${wandb.name}"
debug: False

# Agents  
agent1: 'Hyper'
agent2: 'NaiveLearner'

# Environment
env_id: ipd
game: ipd 
env_type: infinite
env_discount: 0.96
payoff:

# Training hyperparameters
num_envs: 4096
num_steps: 100 # number of steps per episode
total_timesteps: 1_000_000_00
eval_every: 10_000_00 # timesteps for update

# Useful information
# num_episodes = total_timesteps / (num_steps * num_envs) 
# num_updates = num_episodes / eval_every
# batch_size = num_envs * num_steps

# DQN agent parameters
dqn: 
  batch_size: 256
  discount: 0.99
  learning_rate: 1e-2
  epsilon: 0.5
  replay_capacity: 100000
  min_replay_size: 1000
  sgd_period: 1 
  target_update_period: 4 

# PPO agent parameters
ppo:
  num_minibatches: 1
  num_epochs: 4
  gamma: 0.99
  gae_lambda: 0.95
  ppo_clipping_epsilon: 0.2
  value_coeff: 0.5
  clip_value: True
  max_gradient_norm: 0.5
  anneal_entropy: True
  entropy_coeff_start: 0.1
  entropy_coeff_horizon: 5_000
  entropy_coeff_end: 0.1
  lr_scheduling: True
  learning_rate: 2e-3 
  adam_epsilon: 1e-5
  with_memory: False

# Naive Learner parameters
naive:
  lr: 1.0

# LOLA agent parameters
# lola:
#   ... 

# Logging setup
wandb:
  entity: "ucl-dark"
  project: ipd
  group: 'MFOS-${agent1}-vs-${agent2}-${game}-with-memory=${ppo.with_memory}-final'
  name: run-seed-${seed}
  log: True
